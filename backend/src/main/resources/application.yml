spring:
  application:
    name: Admin Dashboard Backend

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update  # Use 'update' or 'none' in production
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        format_sql: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  main:
    allow-bean-definition-overriding: true

  web:
    cors:
      allowed-origins: ${CORS_ORIGINS}
      allowed-methods: ${CORS_METHODS:GET,POST,PUT,DELETE,OPTIONS}
      allowed-headers: ${CORS_HEADERS:Authorization,Content-Type}
      allow-credentials: true

    resources:
      add-mappings: true

  mvc:
    static-path-pattern: /static/**

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile, email
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

jwt:
  secret: ${JWT_SECRET}
  access-token-expiration-ms: 900000
  refresh-token-expiration-ms: 604800000

# ========================
# Logging Configuration
# ========================
logging:
  level:
    root: INFO
    org.springframework: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.tool.hbm2ddl: INFO
    org.hibernate.type: INFO

  file:
    name: logs/app.log

  logback:
    rollingpolicy:
      file-name-pattern: logs/app-%d{yyyy-MM-dd}.log
      max-history: 7
      total-size-cap: 100MB

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%level] [%thread] %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    metrics:
      enabled: true
  server:
    port: 8080
  metrics:
    export:
      prometheus:
        enabled: true
